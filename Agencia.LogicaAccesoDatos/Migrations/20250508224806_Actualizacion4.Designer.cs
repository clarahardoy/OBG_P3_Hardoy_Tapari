// <auto-generated />
using System;
using System.Collections.Generic;
using Agencia.LogicaAccesoDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Agencia.LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250508224806_Actualizacion4")]
    partial class Actualizacion4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Agencia.LogicaNegocio.Entidades.Auditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Accion")
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Entidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntidadId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Auditorias");
                });

            modelBuilder.Entity("Agencia.LogicaNegocio.Entidades.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EnvioId")
                        .HasColumnType("int");

                    b.Property<string>("_descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("_empleadoAutorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("_fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EnvioId");

                    b.HasIndex("_empleadoAutorId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Agencia.LogicaNegocio.Entidades.Envio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgenciaOrigenId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("_estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("_fechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("_fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("_nroTracking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("_peso")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AgenciaOrigenId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Envios");

                    b.HasDiscriminator().HasValue("Envio");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Agencia.LogicaNegocio.Entidades.Sucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("_direccionPostal")
                        .HasColumnType("int");

                    b.Property<string>("_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("_ubicacion", "Agencia.LogicaNegocio.Entidades.Sucursal._ubicacion#Ubicacion", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("_latitud")
                                .HasColumnType("int");

                            b1.Property<int>("_longitud")
                                .HasColumnType("int");
                        });

                    b.HasKey("Id");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("Agencia.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("_activo")
                        .HasColumnType("bit");

                    b.Property<string>("_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.ComplexProperty<Dictionary<string, object>>("_nombreCompleto", "Agencia.LogicaNegocio.Entidades.Usuario._nombreCompleto#NombreCompleto", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("_apellido")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("_nombre")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");
                        });

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Agencia.LogicaNegocio.Entidades.EnvioComun", b =>
                {
                    b.HasBaseType("Agencia.LogicaNegocio.Entidades.Envio");

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.HasIndex("DestinoId");

                    b.HasDiscriminator().HasValue("EnvioComun");
                });

            modelBuilder.Entity("Agencia.LogicaNegocio.Entidades.Comentario", b =>
                {
                    b.HasOne("Agencia.LogicaNegocio.Entidades.Envio", null)
                        .WithMany("_seguimiento")
                        .HasForeignKey("EnvioId");

                    b.HasOne("Agencia.LogicaNegocio.Entidades.Usuario", "_empleadoAutor")
                        .WithMany()
                        .HasForeignKey("_empleadoAutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_empleadoAutor");
                });

            modelBuilder.Entity("Agencia.LogicaNegocio.Entidades.Envio", b =>
                {
                    b.HasOne("Agencia.LogicaNegocio.Entidades.Sucursal", "_agenciaOrigen")
                        .WithMany()
                        .HasForeignKey("AgenciaOrigenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Agencia.LogicaNegocio.Entidades.Usuario", "_cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Agencia.LogicaNegocio.Entidades.Usuario", "_empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("_agenciaOrigen");

                    b.Navigation("_cliente");

                    b.Navigation("_empleado");
                });

            modelBuilder.Entity("Agencia.LogicaNegocio.Entidades.EnvioComun", b =>
                {
                    b.HasOne("Agencia.LogicaNegocio.Entidades.Sucursal", "_destino")
                        .WithMany()
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("_destino");
                });

            modelBuilder.Entity("Agencia.LogicaNegocio.Entidades.Envio", b =>
                {
                    b.Navigation("_seguimiento");
                });
#pragma warning restore 612, 618
        }
    }
}
